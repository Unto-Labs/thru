syntax = "proto3";

package thru.services.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "thru/core/v1/transaction.proto";
import "thru/core/v1/types.proto";

option go_package = "github.com/Unto-Labs/thru-net/grpc/pkg/proto/thru/services/v1;servicesv1";
option java_multiple_files = true;
option java_package = "network.thru.services.v1";
option csharp_namespace = "Thru.Services.V1";
option ruby_package = "Thru::Services::V1";
option objc_class_prefix = "THUS";
option swift_prefix = "THUS";

// SendTransactionRequest submits a transaction to the cluster.
message SendTransactionRequest {
  // Raw transaction bytes encoded according to chain specification.
  bytes raw_transaction = 1 [(google.api.field_behavior) = REQUIRED];
}

// SendTransactionResponse echoes submission metadata.
message SendTransactionResponse {
  thru.core.v1.Signature signature = 1 [(google.api.field_behavior) = REQUIRED];
}

// CommandService defines transactional RPCs that mutate state or perform
// expensive computations.
service CommandService {
  option (google.api.default_host) = "api.thru.network";

  // Submit a new transaction to the cluster.
  rpc SendTransaction(SendTransactionRequest)
      returns (SendTransactionResponse) {
    option (google.api.http) = {
      post: "/v1/transactions"
      body: "*"
    };
  }
}
