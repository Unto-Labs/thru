syntax = "proto3";

package thru.common.v1;

import "buf/validate/validate.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Unto-Labs/thru-net/grpc/pkg/proto/thru/common/v1;commonv1";
option java_multiple_files = true;
option java_package = "network.thru.common.v1";
option csharp_namespace = "Thru.Common.V1";
option ruby_package = "Thru::Common::V1";
option objc_class_prefix = "THU";
option swift_prefix = "THU";

// ConsensusStatus represents the minimum consensus level a resource has
// achieved when returned by the service.
enum ConsensusStatus {
  // CONSENSUS_STATUS_UNSPECIFIED indicates the consensus status is unknown.
  CONSENSUS_STATUS_UNSPECIFIED = 0;

  // CONSENSUS_STATUS_OBSERVED indicates the resource has been observed but
  // not yet confirmed in a finalized block.
  CONSENSUS_STATUS_OBSERVED = 1;

  // CONSENSUS_STATUS_INCLUDED indicates the resource has been included in the
  // ledger but may not be finalized.
  CONSENSUS_STATUS_INCLUDED = 2;

  // CONSENSUS_STATUS_FINALIZED indicates the resource is finalized for a slot.
  CONSENSUS_STATUS_FINALIZED = 3;

  // CONSENSUS_STATUS_LOCALLY_EXECUTED indicates the local node executed the
  // resource but broader cluster finality may not have been achieved.
  CONSENSUS_STATUS_LOCALLY_EXECUTED = 4;

  // CONSENSUS_STATUS_CLUSTER_EXECUTED indicates the entire cluster has
  // executed and agreed on the resource.
  CONSENSUS_STATUS_CLUSTER_EXECUTED = 5;
}

// VersionContext selects which logical version of a resource should be
// returned. At least one field must be set.
message VersionContext {
  option (buf.validate.message).cel = {
    id: "version_context_has_selector"
    message: "one of current, slot, or timestamp must be set"
    expression: "has(this.current) || has(this.slot) || has(this.timestamp)"
  };

  // Specifies the desired version semantics.
  oneof version {
    // Request the latest version available at request time.
    CurrentVersion current = 1 [(google.api.field_behavior) = OPTIONAL];

    // Request the latest version, or historical on.
    CurrentOrHistoricalVersion currentOrHistorical = 2 [(google.api.field_behavior) = OPTIONAL];

    // Request the version for a specific slot number.
    uint64 slot = 3 [(google.api.field_behavior) = OPTIONAL];

    // Request the version nearest to the provided block timestamp.
    google.protobuf.Timestamp timestamp = 4
        [(google.api.field_behavior) = OPTIONAL];
  }
}

// CurrentVersion is an empty marker message for VersionContext.current.
message CurrentVersion {}

// CurrentOrHistoricalVersion is an empty marker message for VersionContext.current.
message CurrentOrHistoricalVersion {}
