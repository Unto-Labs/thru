// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file thru/common/v1/filters.proto (package thru.common.v1, edition 2023)
// option features.field_presence = EXPLICIT;
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file thru/common/v1/filters.proto.
 */
export const file_thru_common_v1_filters: GenFile = /*@__PURE__*/
  fileDesc("Chx0aHJ1L2NvbW1vbi92MS9maWx0ZXJzLnByb3RvEg50aHJ1LmNvbW1vbi52MSKRAQoGRmlsdGVyEh8KCmV4cHJlc3Npb24YASABKAlCC+BBAbpIBXIDGIAgEjcKBnBhcmFtcxgCIAMoCzIiLnRocnUuY29tbW9uLnYxLkZpbHRlci5QYXJhbXNFbnRyeUID4EEBGi0KC1BhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiiQEKE0NlbEZpbHRlclZhbGlkYXRpb24SJwoRYWxsb3dlZF9mdW5jdGlvbnMYASADKAlCDOBBAbpIBpIBAxCAARIkCg5hbGxvd2VkX2ZpZWxkcxgCIAMoCUIM4EEBukgGkgEDEIACEiMKDm1heF9jb21wbGV4aXR5GAMgASgNQgvgQQG6SAUqAxjoB0LNAQoSY29tLnRocnUuY29tbW9uLnYxQgxGaWx0ZXJzUHJvdG9QAVpEZ2l0aHViLmNvbS9VbnRvLUxhYnMvdGhydS1uZXQvZ3JwYy9wa2cvcHJvdG8vdGhydS9jb21tb24vdjE7Y29tbW9udjGiAgNUQ1iqAg5UaHJ1LkNvbW1vbi5WMboCA1RIVcoCDlRocnVcQ29tbW9uXFYx4gIaVGhydVxDb21tb25cVjFcR1BCTWV0YWRhdGHqAhBUaHJ1OjpDb21tb246OlYxkgMCCAFiCGVkaXRpb25zcOgH", [file_buf_validate_validate, file_google_api_field_behavior]);

/**
 * Filter represents a CEL-based expression applied to query or stream results.
 *
 * @generated from message thru.common.v1.Filter
 */
export type Filter = Message<"thru.common.v1.Filter"> & {
  /**
   * CEL expression applied server-side. Empty expressions are treated as no-op.
   *
   * @generated from field: string expression = 1;
   */
  expression: string;

  /**
   * Named parameter bindings for expression parameterization.
   *
   * @generated from field: map<string, string> params = 2;
   */
  params: { [key: string]: string };
};

/**
 * Describes the message thru.common.v1.Filter.
 * Use `create(FilterSchema)` to create a new message.
 */
export const FilterSchema: GenMessage<Filter> = /*@__PURE__*/
  messageDesc(file_thru_common_v1_filters, 0);

/**
 * CelFilterValidation describes the validation configuration returned to
 * clients to help them build safe filter expressions.
 *
 * @generated from message thru.common.v1.CelFilterValidation
 */
export type CelFilterValidation = Message<"thru.common.v1.CelFilterValidation"> & {
  /**
   * List of allowed CEL function names for a specific request type.
   *
   * @generated from field: repeated string allowed_functions = 1;
   */
  allowedFunctions: string[];

  /**
   * List of allowed field names accessible to the CEL expression.
   *
   * @generated from field: repeated string allowed_fields = 2;
   */
  allowedFields: string[];

  /**
   * Maximum AST node count permitted for a CEL expression.
   *
   * @generated from field: uint32 max_complexity = 3;
   */
  maxComplexity: number;
};

/**
 * Describes the message thru.common.v1.CelFilterValidation.
 * Use `create(CelFilterValidationSchema)` to create a new message.
 */
export const CelFilterValidationSchema: GenMessage<CelFilterValidation> = /*@__PURE__*/
  messageDesc(file_thru_common_v1_filters, 1);

