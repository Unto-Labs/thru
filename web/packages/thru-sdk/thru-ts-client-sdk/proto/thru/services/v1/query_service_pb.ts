// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file thru/services/v1/query_service.proto (package thru.services.v1, edition 2023)
// option features.field_presence = EXPLICIT;
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_client } from "../../../google/api/client_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import type { ConsensusStatus, VersionContext } from "../../common/v1/consensus_pb";
import { file_thru_common_v1_consensus } from "../../common/v1/consensus_pb";
import type { Filter } from "../../common/v1/filters_pb";
import { file_thru_common_v1_filters } from "../../common/v1/filters_pb";
import type { PageRequest, PageResponse } from "../../common/v1/pagination_pb";
import { file_thru_common_v1_pagination } from "../../common/v1/pagination_pb";
import type { Account, AccountSchema, AccountView, DataSlice, RawAccountSchema } from "../../core/v1/account_pb";
import { file_thru_core_v1_account } from "../../core/v1/account_pb";
import type { Block, BlockSchema, BlockView, RawBlockSchema } from "../../core/v1/block_pb";
import { file_thru_core_v1_block } from "../../core/v1/block_pb";
import type { StateProof, StateProofRequest } from "../../core/v1/state_pb";
import { file_thru_core_v1_state } from "../../core/v1/state_pb";
import type { RawTransactionSchema, TransactionExecutionResult, TransactionSchema, TransactionView } from "../../core/v1/transaction_pb";
import { file_thru_core_v1_transaction } from "../../core/v1/transaction_pb";
import type { BlockHash, Pubkey, Signature } from "../../core/v1/types_pb";
import { file_thru_core_v1_types } from "../../core/v1/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file thru/services/v1/query_service.proto.
 */
export const file_thru_services_v1_query_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_thru_common_v1_consensus, file_thru_common_v1_filters, file_thru_common_v1_pagination, file_thru_core_v1_account, file_thru_core_v1_block, file_thru_core_v1_state, file_thru_core_v1_transaction, file_thru_core_v1_types]);

/**
 * GetAccountRequest retrieves a decoded account by public key.
 *
 * @generated from message thru.services.v1.GetAccountRequest
 */
export type GetAccountRequest = Message<"thru.services.v1.GetAccountRequest"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey address = 1;
   */
  address?: Pubkey;

  /**
   * @generated from field: thru.core.v1.AccountView view = 2;
   */
  view: AccountView;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 3;
   */
  versionContext?: VersionContext;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 4;
   */
  minConsensus: ConsensusStatus;

  /**
   * @generated from field: thru.core.v1.DataSlice data_slice = 6;
   */
  dataSlice?: DataSlice;
};

/**
 * Describes the message thru.services.v1.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export const GetAccountRequestSchema: GenMessage<GetAccountRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 0);

/**
 * GetRawAccountRequest retrieves raw account bytes by public key.
 *
 * @generated from message thru.services.v1.GetRawAccountRequest
 */
export type GetRawAccountRequest = Message<"thru.services.v1.GetRawAccountRequest"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey address = 1;
   */
  address?: Pubkey;

  /**
   * @generated from field: thru.core.v1.AccountView view = 2;
   */
  view: AccountView;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 3;
   */
  versionContext?: VersionContext;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 4;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.GetRawAccountRequest.
 * Use `create(GetRawAccountRequestSchema)` to create a new message.
 */
export const GetRawAccountRequestSchema: GenMessage<GetRawAccountRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 1);

/**
 * GetTransactionRequest retrieves a decoded transaction by signature.
 *
 * @generated from message thru.services.v1.GetTransactionRequest
 */
export type GetTransactionRequest = Message<"thru.services.v1.GetTransactionRequest"> & {
  /**
   * @generated from field: thru.core.v1.Signature signature = 1;
   */
  signature?: Signature;

  /**
   * @generated from field: thru.core.v1.TransactionView view = 2;
   */
  view: TransactionView;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 3;
   */
  versionContext?: VersionContext;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 4;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.GetTransactionRequest.
 * Use `create(GetTransactionRequestSchema)` to create a new message.
 */
export const GetTransactionRequestSchema: GenMessage<GetTransactionRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 2);

/**
 * GetRawTransactionRequest retrieves raw transaction bytes by signature.
 *
 * @generated from message thru.services.v1.GetRawTransactionRequest
 */
export type GetRawTransactionRequest = Message<"thru.services.v1.GetRawTransactionRequest"> & {
  /**
   * @generated from field: thru.core.v1.Signature signature = 1;
   */
  signature?: Signature;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 2;
   */
  versionContext?: VersionContext;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 3;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.GetRawTransactionRequest.
 * Use `create(GetRawTransactionRequestSchema)` to create a new message.
 */
export const GetRawTransactionRequestSchema: GenMessage<GetRawTransactionRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 3);

/**
 * GenerateStateProofRequest requests an account state proof.
 *
 * @generated from message thru.services.v1.GenerateStateProofRequest
 */
export type GenerateStateProofRequest = Message<"thru.services.v1.GenerateStateProofRequest"> & {
  /**
   * @generated from field: thru.core.v1.StateProofRequest request = 1;
   */
  request?: StateProofRequest;
};

/**
 * Describes the message thru.services.v1.GenerateStateProofRequest.
 * Use `create(GenerateStateProofRequestSchema)` to create a new message.
 */
export const GenerateStateProofRequestSchema: GenMessage<GenerateStateProofRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 4);

/**
 * GenerateStateProofResponse contains the generated proof.
 *
 * @generated from message thru.services.v1.GenerateStateProofResponse
 */
export type GenerateStateProofResponse = Message<"thru.services.v1.GenerateStateProofResponse"> & {
  /**
   * @generated from field: thru.core.v1.StateProof proof = 1;
   */
  proof?: StateProof;
};

/**
 * Describes the message thru.services.v1.GenerateStateProofResponse.
 * Use `create(GenerateStateProofResponseSchema)` to create a new message.
 */
export const GenerateStateProofResponseSchema: GenMessage<GenerateStateProofResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 5);

/**
 * GetBlockRequest retrieves decoded block information by slot or hash.
 *
 * @generated from message thru.services.v1.GetBlockRequest
 */
export type GetBlockRequest = Message<"thru.services.v1.GetBlockRequest"> & {
  /**
   * @generated from oneof thru.services.v1.GetBlockRequest.selector
   */
  selector: {
    /**
     * @generated from field: uint64 slot = 1;
     */
    value: bigint;
    case: "slot";
  } | {
    /**
     * @generated from field: thru.core.v1.BlockHash block_hash = 2;
     */
    value: BlockHash;
    case: "blockHash";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: thru.core.v1.BlockView view = 3;
   */
  view: BlockView;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 4;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.GetBlockRequest.
 * Use `create(GetBlockRequestSchema)` to create a new message.
 */
export const GetBlockRequestSchema: GenMessage<GetBlockRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 6);

/**
 * GetRawBlockRequest retrieves raw block bytes by slot or hash.
 *
 * @generated from message thru.services.v1.GetRawBlockRequest
 */
export type GetRawBlockRequest = Message<"thru.services.v1.GetRawBlockRequest"> & {
  /**
   * @generated from oneof thru.services.v1.GetRawBlockRequest.selector
   */
  selector: {
    /**
     * @generated from field: uint64 slot = 1;
     */
    value: bigint;
    case: "slot";
  } | {
    /**
     * @generated from field: thru.core.v1.BlockHash block_hash = 2;
     */
    value: BlockHash;
    case: "blockHash";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 3;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.GetRawBlockRequest.
 * Use `create(GetRawBlockRequestSchema)` to create a new message.
 */
export const GetRawBlockRequestSchema: GenMessage<GetRawBlockRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 7);

/**
 * ListOwnedAccountsRequest lists accounts for a given owner public key.
 *
 * @generated from message thru.services.v1.ListOwnedAccountsRequest
 */
export type ListOwnedAccountsRequest = Message<"thru.services.v1.ListOwnedAccountsRequest"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey owner = 1;
   */
  owner?: Pubkey;

  /**
   * @generated from field: thru.core.v1.AccountView view = 2;
   */
  view: AccountView;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 3;
   */
  versionContext?: VersionContext;

  /**
   * @generated from field: thru.common.v1.Filter filter = 4;
   */
  filter?: Filter;

  /**
   * @generated from field: thru.common.v1.PageRequest page = 5;
   */
  page?: PageRequest;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 6;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.ListOwnedAccountsRequest.
 * Use `create(ListOwnedAccountsRequestSchema)` to create a new message.
 */
export const ListOwnedAccountsRequestSchema: GenMessage<ListOwnedAccountsRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 8);

/**
 * ListOwnedAccountsResponse contains paginated accounts.
 *
 * @generated from message thru.services.v1.ListOwnedAccountsResponse
 */
export type ListOwnedAccountsResponse = Message<"thru.services.v1.ListOwnedAccountsResponse"> & {
  /**
   * @generated from field: repeated thru.core.v1.Account accounts = 1;
   */
  accounts: Account[];

  /**
   * @generated from field: thru.common.v1.PageResponse page = 2;
   */
  page?: PageResponse;
};

/**
 * Describes the message thru.services.v1.ListOwnedAccountsResponse.
 * Use `create(ListOwnedAccountsResponseSchema)` to create a new message.
 */
export const ListOwnedAccountsResponseSchema: GenMessage<ListOwnedAccountsResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 9);

/**
 * ListBlocksRequest lists blocks with pagination and filtering.
 *
 * @generated from message thru.services.v1.ListBlocksRequest
 */
export type ListBlocksRequest = Message<"thru.services.v1.ListBlocksRequest"> & {
  /**
   * @generated from field: thru.common.v1.Filter filter = 1;
   */
  filter?: Filter;

  /**
   * @generated from field: thru.common.v1.PageRequest page = 2;
   */
  page?: PageRequest;

  /**
   * @generated from field: thru.core.v1.BlockView view = 3;
   */
  view: BlockView;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus min_consensus = 4;
   */
  minConsensus: ConsensusStatus;
};

/**
 * Describes the message thru.services.v1.ListBlocksRequest.
 * Use `create(ListBlocksRequestSchema)` to create a new message.
 */
export const ListBlocksRequestSchema: GenMessage<ListBlocksRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 10);

/**
 * ListBlocksResponse returns a page of blocks.
 *
 * @generated from message thru.services.v1.ListBlocksResponse
 */
export type ListBlocksResponse = Message<"thru.services.v1.ListBlocksResponse"> & {
  /**
   * @generated from field: repeated thru.core.v1.Block blocks = 1;
   */
  blocks: Block[];

  /**
   * @generated from field: thru.common.v1.PageResponse page = 2;
   */
  page?: PageResponse;
};

/**
 * Describes the message thru.services.v1.ListBlocksResponse.
 * Use `create(ListBlocksResponseSchema)` to create a new message.
 */
export const ListBlocksResponseSchema: GenMessage<ListBlocksResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 11);

/**
 * ListTransactionsForAccountRequest lists transaction signatures involving an account.
 *
 * @generated from message thru.services.v1.ListTransactionsForAccountRequest
 */
export type ListTransactionsForAccountRequest = Message<"thru.services.v1.ListTransactionsForAccountRequest"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey account = 1;
   */
  account?: Pubkey;

  /**
   * @generated from field: thru.common.v1.PageRequest page = 2;
   */
  page?: PageRequest;
};

/**
 * Describes the message thru.services.v1.ListTransactionsForAccountRequest.
 * Use `create(ListTransactionsForAccountRequestSchema)` to create a new message.
 */
export const ListTransactionsForAccountRequestSchema: GenMessage<ListTransactionsForAccountRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 12);

/**
 * ListTransactionsForAccountResponse contains transaction signatures.
 *
 * @generated from message thru.services.v1.ListTransactionsForAccountResponse
 */
export type ListTransactionsForAccountResponse = Message<"thru.services.v1.ListTransactionsForAccountResponse"> & {
  /**
   * @generated from field: repeated thru.core.v1.Signature signatures = 1;
   */
  signatures: Signature[];

  /**
   * @generated from field: thru.common.v1.PageResponse page = 2;
   */
  page?: PageResponse;
};

/**
 * Describes the message thru.services.v1.ListTransactionsForAccountResponse.
 * Use `create(ListTransactionsForAccountResponseSchema)` to create a new message.
 */
export const ListTransactionsForAccountResponseSchema: GenMessage<ListTransactionsForAccountResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 13);

/**
 * GetVersionRequest fetches component version strings.
 *
 * @generated from message thru.services.v1.GetVersionRequest
 */
export type GetVersionRequest = Message<"thru.services.v1.GetVersionRequest"> & {
};

/**
 * Describes the message thru.services.v1.GetVersionRequest.
 * Use `create(GetVersionRequestSchema)` to create a new message.
 */
export const GetVersionRequestSchema: GenMessage<GetVersionRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 14);

/**
 * GetVersionResponse returns version information per component.
 *
 * @generated from message thru.services.v1.GetVersionResponse
 */
export type GetVersionResponse = Message<"thru.services.v1.GetVersionResponse"> & {
  /**
   * @generated from field: map<string, string> versions = 1;
   */
  versions: { [key: string]: string };
};

/**
 * Describes the message thru.services.v1.GetVersionResponse.
 * Use `create(GetVersionResponseSchema)` to create a new message.
 */
export const GetVersionResponseSchema: GenMessage<GetVersionResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 15);

/**
 * GetEventRequest fetches an event by identifier.
 *
 * @generated from message thru.services.v1.GetEventRequest
 */
export type GetEventRequest = Message<"thru.services.v1.GetEventRequest"> & {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: thru.common.v1.VersionContext version_context = 2;
   */
  versionContext?: VersionContext;
};

/**
 * Describes the message thru.services.v1.GetEventRequest.
 * Use `create(GetEventRequestSchema)` to create a new message.
 */
export const GetEventRequestSchema: GenMessage<GetEventRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 16);

/**
 * Event represents a transaction event emitted by the chain.
 *
 * @generated from message thru.services.v1.Event
 */
export type Event = Message<"thru.services.v1.Event"> & {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: thru.core.v1.Signature transaction_signature = 2;
   */
  transactionSignature?: Signature;

  /**
   * @generated from field: thru.core.v1.Pubkey program = 3;
   */
  program?: Pubkey;

  /**
   * @generated from field: bytes payload = 4;
   */
  payload: Uint8Array;

  /**
   * @generated from field: uint64 slot = 5;
   */
  slot: bigint;

  /**
   * @generated from field: uint32 call_idx = 6;
   */
  callIdx: number;

  /**
   * @generated from field: uint32 program_idx = 7;
   */
  programIdx: number;

  /**
   * @generated from field: uint32 payload_size = 8;
   */
  payloadSize: number;
};

/**
 * Describes the message thru.services.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 17);

/**
 * GetTransactionStatusRequest fetches execution status for a transaction.
 *
 * @generated from message thru.services.v1.GetTransactionStatusRequest
 */
export type GetTransactionStatusRequest = Message<"thru.services.v1.GetTransactionStatusRequest"> & {
  /**
   * @generated from field: thru.core.v1.Signature signature = 1;
   */
  signature?: Signature;
};

/**
 * Describes the message thru.services.v1.GetTransactionStatusRequest.
 * Use `create(GetTransactionStatusRequestSchema)` to create a new message.
 */
export const GetTransactionStatusRequestSchema: GenMessage<GetTransactionStatusRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 18);

/**
 * TransactionStatus captures status metadata for a transaction.
 *
 * @generated from message thru.services.v1.TransactionStatus
 */
export type TransactionStatus = Message<"thru.services.v1.TransactionStatus"> & {
  /**
   * @generated from field: thru.core.v1.Signature signature = 1;
   */
  signature?: Signature;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus consensus_status = 2;
   */
  consensusStatus: ConsensusStatus;

  /**
   * @generated from field: thru.core.v1.TransactionExecutionResult execution_result = 3;
   */
  executionResult?: TransactionExecutionResult;
};

/**
 * Describes the message thru.services.v1.TransactionStatus.
 * Use `create(TransactionStatusSchema)` to create a new message.
 */
export const TransactionStatusSchema: GenMessage<TransactionStatus> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 19);

/**
 *
 *
 * @generated from message thru.services.v1.GetHeightRequest
 */
export type GetHeightRequest = Message<"thru.services.v1.GetHeightRequest"> & {
};

/**
 * Describes the message thru.services.v1.GetHeightRequest.
 * Use `create(GetHeightRequestSchema)` to create a new message.
 */
export const GetHeightRequestSchema: GenMessage<GetHeightRequest> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 20);

/**
 * GetHeightResponse
 *
 * @generated from message thru.services.v1.GetHeightResponse
 */
export type GetHeightResponse = Message<"thru.services.v1.GetHeightResponse"> & {
  /**
   * @generated from field: uint64 finalized = 1;
   */
  finalized: bigint;

  /**
   * @generated from field: uint64 locally_executed = 2;
   */
  locallyExecuted: bigint;

  /**
   * @generated from field: uint64 cluster_executed = 3;
   */
  clusterExecuted: bigint;
};

/**
 * Describes the message thru.services.v1.GetHeightResponse.
 * Use `create(GetHeightResponseSchema)` to create a new message.
 */
export const GetHeightResponseSchema: GenMessage<GetHeightResponse> = /*@__PURE__*/
  messageDesc(file_thru_services_v1_query_service, 21);

/**
 * QueryService defines unary RPCs for accessing blockchain data.
 *
 * @generated from service thru.services.v1.QueryService
 */
export const QueryService: GenService<{
  /**
   * Get block heights
   *
   * @generated from rpc thru.services.v1.QueryService.GetHeight
   */
  getHeight: {
    methodKind: "unary";
    input: typeof GetHeightRequestSchema;
    output: typeof GetHeightResponseSchema;
  },
  /**
   * Get account information.
   *
   * @generated from rpc thru.services.v1.QueryService.GetAccount
   */
  getAccount: {
    methodKind: "unary";
    input: typeof GetAccountRequestSchema;
    output: typeof AccountSchema;
  },
  /**
   * Get account raw bytes.
   *
   * @generated from rpc thru.services.v1.QueryService.GetRawAccount
   */
  getRawAccount: {
    methodKind: "unary";
    input: typeof GetRawAccountRequestSchema;
    output: typeof RawAccountSchema;
  },
  /**
   * Get transaction by signature.
   *
   * @generated from rpc thru.services.v1.QueryService.GetTransaction
   */
  getTransaction: {
    methodKind: "unary";
    input: typeof GetTransactionRequestSchema;
    output: typeof TransactionSchema;
  },
  /**
   * Get raw transaction by signature.
   *
   * @generated from rpc thru.services.v1.QueryService.GetRawTransaction
   */
  getRawTransaction: {
    methodKind: "unary";
    input: typeof GetRawTransactionRequestSchema;
    output: typeof RawTransactionSchema;
  },
  /**
   * Get block by slot or hash.
   *
   * @generated from rpc thru.services.v1.QueryService.GetBlock
   */
  getBlock: {
    methodKind: "unary";
    input: typeof GetBlockRequestSchema;
    output: typeof BlockSchema;
  },
  /**
   * Get raw block bytes.
   *
   * @generated from rpc thru.services.v1.QueryService.GetRawBlock
   */
  getRawBlock: {
    methodKind: "unary";
    input: typeof GetRawBlockRequestSchema;
    output: typeof RawBlockSchema;
  },
  /**
   * List accounts owned by a public key.
   *
   * @generated from rpc thru.services.v1.QueryService.ListOwnedAccounts
   */
  listOwnedAccounts: {
    methodKind: "unary";
    input: typeof ListOwnedAccountsRequestSchema;
    output: typeof ListOwnedAccountsResponseSchema;
  },
  /**
   * List blocks using pagination and filtering. By default returns blocks ordered from latest slot to the first one.
   *
   * @generated from rpc thru.services.v1.QueryService.ListBlocks
   */
  listBlocks: {
    methodKind: "unary";
    input: typeof ListBlocksRequestSchema;
    output: typeof ListBlocksResponseSchema;
  },
  /**
   * List executed transaction signatures involving an account.
   *
   * @generated from rpc thru.services.v1.QueryService.ListTransactionsForAccount
   */
  listTransactionsForAccount: {
    methodKind: "unary";
    input: typeof ListTransactionsForAccountRequestSchema;
    output: typeof ListTransactionsForAccountResponseSchema;
  },
  /**
   * Get a specific event by ID.
   *
   * @generated from rpc thru.services.v1.QueryService.GetEvent
   */
  getEvent: {
    methodKind: "unary";
    input: typeof GetEventRequestSchema;
    output: typeof EventSchema;
  },
  /**
   * Get derived transaction status metadata.
   *
   * @generated from rpc thru.services.v1.QueryService.GetTransactionStatus
   */
  getTransactionStatus: {
    methodKind: "unary";
    input: typeof GetTransactionStatusRequestSchema;
    output: typeof TransactionStatusSchema;
  },
  /**
   * Generate an account state proof snapshot.
   *
   * @generated from rpc thru.services.v1.QueryService.GenerateStateProof
   */
  generateStateProof: {
    methodKind: "unary";
    input: typeof GenerateStateProofRequestSchema;
    output: typeof GenerateStateProofResponseSchema;
  },
  /**
   * Get component version strings.
   *
   * @generated from rpc thru.services.v1.QueryService.GetVersion
   */
  getVersion: {
    methodKind: "unary";
    input: typeof GetVersionRequestSchema;
    output: typeof GetVersionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_thru_services_v1_query_service, 0);

