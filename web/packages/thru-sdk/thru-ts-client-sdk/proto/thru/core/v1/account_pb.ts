// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file thru/core/v1/account.proto (package thru.core.v1, edition 2023)
// option features.field_presence = EXPLICIT;
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ConsensusStatus } from "../../common/v1/consensus_pb";
import { file_thru_common_v1_consensus } from "../../common/v1/consensus_pb";
import type { Pubkey } from "./types_pb";
import { file_thru_core_v1_types } from "./types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file thru/core/v1/account.proto.
 */
export const file_thru_core_v1_account: GenFile = /*@__PURE__*/
  fileDesc("Chp0aHJ1L2NvcmUvdjEvYWNjb3VudC5wcm90bxIMdGhydS5jb3JlLnYxIsgBCgxBY2NvdW50RmxhZ3MSFwoKaXNfcHJvZ3JhbRgBIAEoCEID4EEBEhoKDWlzX3ByaXZpbGVnZWQYAiABKAhCA+BBARIeChFpc191bmNvbXByZXNzYWJsZRgDIAEoCEID4EEBEhkKDGlzX2VwaGVtZXJhbBgEIAEoCEID4EEBEhcKCmlzX2RlbGV0ZWQYBSABKAhCA+BBARITCgZpc19uZXcYBiABKAhCA+BBARIaCg1pc19jb21wcmVzc2VkGAcgASgIQgPgQQEi4gEKC0FjY291bnRNZXRhEhsKB3ZlcnNpb24YASABKA1CCuBBArpIBCoCKAESLgoFZmxhZ3MYAiABKAsyGi50aHJ1LmNvcmUudjEuQWNjb3VudEZsYWdzQgPgQQESFgoJZGF0YV9zaXplGAMgASgNQgPgQQISGgoNc3RhdGVfY291bnRlchgEIAEoBEID4EEBEigKBW93bmVyGAUgASgLMhQudGhydS5jb3JlLnYxLlB1YmtleUID4EECEhQKB2JhbGFuY2UYBiABKARCA+BBARISCgVub25jZRgHIAEoBEID4EEBIm4KC0FjY291bnREYXRhEhsKBGRhdGEYASABKAxCDeBBAbpIB3oFGICAgAgSFwoKY29tcHJlc3NlZBgCIAEoCEID4EEBEikKFWNvbXByZXNzaW9uX2FsZ29yaXRobRgDIAEoCUIK4EEBukgEcgIYQCJJCglEYXRhU2xpY2USHQoGb2Zmc2V0GAEgASgNQg3gQQK6SAcyBRiAgIAIEh0KBmxlbmd0aBgCIAEoDUIN4EECukgHMgUYgICACCKoAQoLQWNjb3VudFBhZ2USFQoIcGFnZV9pZHgYASABKA1CA+BBAhIeCglwYWdlX3NpemUYAiABKA1CC+BBArpIBSoDGIAgEh4KCXBhZ2VfZGF0YRgDIAEoDEIL4EECukgFegMYgCASFwoKY29tcHJlc3NlZBgEIAEoCEID4EEBEikKFWNvbXByZXNzaW9uX2FsZ29yaXRobRgFIAEoCUIK4EEBukgEcgIYQCJlChZWZXJzaW9uQ29udGV4dE1ldGFkYXRhEhEKBHNsb3QYASABKARCA+BBARI4Cg9ibG9ja190aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQEilQIKB0FjY291bnQSKgoHYWRkcmVzcxgBIAEoCzIULnRocnUuY29yZS52MS5QdWJrZXlCA+BBAhIsCgRtZXRhGAIgASgLMhkudGhydS5jb3JlLnYxLkFjY291bnRNZXRhQgPgQQESLAoEZGF0YRgDIAEoCzIZLnRocnUuY29yZS52MS5BY2NvdW50RGF0YUID4EEBEkIKD3ZlcnNpb25fY29udGV4dBgEIAEoCzIkLnRocnUuY29yZS52MS5WZXJzaW9uQ29udGV4dE1ldGFkYXRhQgPgQQESPgoQY29uc2Vuc3VzX3N0YXR1cxgFIAEoDjIfLnRocnUuY29tbW9uLnYxLkNvbnNlbnN1c1N0YXR1c0ID4EEBIrwBCgpSYXdBY2NvdW50EioKB2FkZHJlc3MYASABKAsyFC50aHJ1LmNvcmUudjEuUHVia2V5QgPgQQISHQoIcmF3X21ldGEYAiABKAxCC+BBArpIBXoDGIAgEh8KCHJhd19kYXRhGAMgASgMQg3gQQG6SAd6BRiAgIAIEkIKD3ZlcnNpb25fY29udGV4dBgEIAEoCzIkLnRocnUuY29yZS52MS5WZXJzaW9uQ29udGV4dE1ldGFkYXRhQgPgQQEqmAEKC0FjY291bnRWaWV3EhwKGEFDQ09VTlRfVklFV19VTlNQRUNJRklFRBAAEhwKGEFDQ09VTlRfVklFV19QVUJLRVlfT05MWRABEhoKFkFDQ09VTlRfVklFV19NRVRBX09OTFkQAhIaChZBQ0NPVU5UX1ZJRVdfREFUQV9PTkxZEAMSFQoRQUNDT1VOVF9WSUVXX0ZVTEwQBELAAQoQY29tLnRocnUuY29yZS52MUIMQWNjb3VudFByb3RvUAFaQGdpdGh1Yi5jb20vVW50by1MYWJzL3RocnUtbmV0L2dycGMvcGtnL3Byb3RvL3RocnUvY29yZS92MTtjb3JldjGiAgNUQ1iqAgxUaHJ1LkNvcmUuVjG6AgRUSFVDygIMVGhydVxDb3JlXFYx4gIYVGhydVxDb3JlXFYxXEdQQk1ldGFkYXRh6gIOVGhydTo6Q29yZTo6VjGSAwIIAWIIZWRpdGlvbnNw6Ac", [file_buf_validate_validate, file_google_api_field_behavior, file_google_protobuf_timestamp, file_thru_common_v1_consensus, file_thru_core_v1_types]);

/**
 * AccountFlags enumerates boolean account capability flags.
 *
 * @generated from message thru.core.v1.AccountFlags
 */
export type AccountFlags = Message<"thru.core.v1.AccountFlags"> & {
  /**
   * @generated from field: bool is_program = 1;
   */
  isProgram: boolean;

  /**
   * @generated from field: bool is_privileged = 2;
   */
  isPrivileged: boolean;

  /**
   * @generated from field: bool is_uncompressable = 3;
   */
  isUncompressable: boolean;

  /**
   * @generated from field: bool is_ephemeral = 4;
   */
  isEphemeral: boolean;

  /**
   * @generated from field: bool is_deleted = 5;
   */
  isDeleted: boolean;

  /**
   * @generated from field: bool is_new = 6;
   */
  isNew: boolean;

  /**
   * @generated from field: bool is_compressed = 7;
   */
  isCompressed: boolean;
};

/**
 * Describes the message thru.core.v1.AccountFlags.
 * Use `create(AccountFlagsSchema)` to create a new message.
 */
export const AccountFlagsSchema: GenMessage<AccountFlags> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 0);

/**
 * AccountMeta captures metadata associated with an account.
 *
 * @generated from message thru.core.v1.AccountMeta
 */
export type AccountMeta = Message<"thru.core.v1.AccountMeta"> & {
  /**
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: thru.core.v1.AccountFlags flags = 2;
   */
  flags?: AccountFlags;

  /**
   * @generated from field: uint32 data_size = 3;
   */
  dataSize: number;

  /**
   * @generated from field: uint64 state_counter = 4;
   */
  stateCounter: bigint;

  /**
   * @generated from field: thru.core.v1.Pubkey owner = 5;
   */
  owner?: Pubkey;

  /**
   * @generated from field: uint64 balance = 6;
   */
  balance: bigint;

  /**
   * @generated from field: uint64 nonce = 7;
   */
  nonce: bigint;
};

/**
 * Describes the message thru.core.v1.AccountMeta.
 * Use `create(AccountMetaSchema)` to create a new message.
 */
export const AccountMetaSchema: GenMessage<AccountMeta> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 1);

/**
 * AccountData contains account data payloads.
 *
 * @generated from message thru.core.v1.AccountData
 */
export type AccountData = Message<"thru.core.v1.AccountData"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: bool compressed = 2;
   */
  compressed: boolean;

  /**
   * @generated from field: string compression_algorithm = 3;
   */
  compressionAlgorithm: string;
};

/**
 * Describes the message thru.core.v1.AccountData.
 * Use `create(AccountDataSchema)` to create a new message.
 */
export const AccountDataSchema: GenMessage<AccountData> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 2);

/**
 * DataSlice describes a contiguous range of account data to return.
 *
 * @generated from message thru.core.v1.DataSlice
 */
export type DataSlice = Message<"thru.core.v1.DataSlice"> & {
  /**
   * @generated from field: uint32 offset = 1;
   */
  offset: number;

  /**
   * @generated from field: uint32 length = 2;
   */
  length: number;
};

/**
 * Describes the message thru.core.v1.DataSlice.
 * Use `create(DataSliceSchema)` to create a new message.
 */
export const DataSliceSchema: GenMessage<DataSlice> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 3);

/**
 * AccountPage represents a 4KB chunk for streaming account data.
 *
 * @generated from message thru.core.v1.AccountPage
 */
export type AccountPage = Message<"thru.core.v1.AccountPage"> & {
  /**
   * @generated from field: uint32 page_idx = 1;
   */
  pageIdx: number;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: bytes page_data = 3;
   */
  pageData: Uint8Array;

  /**
   * @generated from field: bool compressed = 4;
   */
  compressed: boolean;

  /**
   * @generated from field: string compression_algorithm = 5;
   */
  compressionAlgorithm: string;
};

/**
 * Describes the message thru.core.v1.AccountPage.
 * Use `create(AccountPageSchema)` to create a new message.
 */
export const AccountPageSchema: GenMessage<AccountPage> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 4);

/**
 * VersionContextMetadata captures context for a returned account state.
 *
 * @generated from message thru.core.v1.VersionContextMetadata
 */
export type VersionContextMetadata = Message<"thru.core.v1.VersionContextMetadata"> & {
  /**
   * @generated from field: uint64 slot = 1;
   */
  slot: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp block_timestamp = 2;
   */
  blockTimestamp?: Timestamp;
};

/**
 * Describes the message thru.core.v1.VersionContextMetadata.
 * Use `create(VersionContextMetadataSchema)` to create a new message.
 */
export const VersionContextMetadataSchema: GenMessage<VersionContextMetadata> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 5);

/**
 * Account models a fully decoded account resource.
 *
 * @generated from message thru.core.v1.Account
 */
export type Account = Message<"thru.core.v1.Account"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey address = 1;
   */
  address?: Pubkey;

  /**
   * @generated from field: thru.core.v1.AccountMeta meta = 2;
   */
  meta?: AccountMeta;

  /**
   * @generated from field: thru.core.v1.AccountData data = 3;
   */
  data?: AccountData;

  /**
   * @generated from field: thru.core.v1.VersionContextMetadata version_context = 4;
   */
  versionContext?: VersionContextMetadata;

  /**
   * @generated from field: thru.common.v1.ConsensusStatus consensus_status = 5;
   */
  consensusStatus: ConsensusStatus;
};

/**
 * Describes the message thru.core.v1.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export const AccountSchema: GenMessage<Account> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 6);

/**
 * RawAccount captures raw serialized account bytes.
 *
 * @generated from message thru.core.v1.RawAccount
 */
export type RawAccount = Message<"thru.core.v1.RawAccount"> & {
  /**
   * @generated from field: thru.core.v1.Pubkey address = 1;
   */
  address?: Pubkey;

  /**
   * @generated from field: bytes raw_meta = 2;
   */
  rawMeta: Uint8Array;

  /**
   * @generated from field: bytes raw_data = 3;
   */
  rawData: Uint8Array;

  /**
   * @generated from field: thru.core.v1.VersionContextMetadata version_context = 4;
   */
  versionContext?: VersionContextMetadata;
};

/**
 * Describes the message thru.core.v1.RawAccount.
 * Use `create(RawAccountSchema)` to create a new message.
 */
export const RawAccountSchema: GenMessage<RawAccount> = /*@__PURE__*/
  messageDesc(file_thru_core_v1_account, 7);

/**
 * AccountView controls which sections of account resources are returned.
 *
 * @generated from enum thru.core.v1.AccountView
 */
export enum AccountView {
  /**
   * ACCOUNT_VIEW_UNSPECIFIED uses service defaults.
   *
   * @generated from enum value: ACCOUNT_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ACCOUNT_VIEW_PUBKEY_ONLY returns only the account address.
   *
   * @generated from enum value: ACCOUNT_VIEW_PUBKEY_ONLY = 1;
   */
  PUBKEY_ONLY = 1,

  /**
   * ACCOUNT_VIEW_META_ONLY returns only account metadata.
   *
   * @generated from enum value: ACCOUNT_VIEW_META_ONLY = 2;
   */
  META_ONLY = 2,

  /**
   * ACCOUNT_VIEW_DATA_ONLY returns only account data.
   *
   * @generated from enum value: ACCOUNT_VIEW_DATA_ONLY = 3;
   */
  DATA_ONLY = 3,

  /**
   * ACCOUNT_VIEW_FULL returns address, metadata, and data.
   *
   * @generated from enum value: ACCOUNT_VIEW_FULL = 4;
   */
  FULL = 4,
}

/**
 * Describes the enum thru.core.v1.AccountView.
 */
export const AccountViewSchema: GenEnum<AccountView> = /*@__PURE__*/
  enumDesc(file_thru_core_v1_account, 0);

